{"mappings":"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","sources":["src/webpages/users-page/users-page.ts","src/js/jstable.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import { img, href, sleep } from \"~/src/js/appUtil\"\nimport { icon } from \"~/src/js/Icons\"\nimport { JSTable } from \"~/src/js/jstable\"\n\nconst status_el = document.getElementById(\"status\")\n\nconsole.log(`Environment: ${process.env.NODE_ENV}`)\n\nfunction user_thumbnail(id: number | string, img_url: string): string {\n  if (!(id && img_url)) return \"\"\n  const avatar = img(img_url, 40, 40, id)\n  return href(`/${id}`, avatar)\n}\n\nfunction ts_to_dt(ts: number, time = false): string {\n  if (!ts) {\n    return \"\"\n  }\n  const dt = new Date(1000 * ts)\n  return time ? dt.toLocaleString() : dt.toLocaleDateString()\n}\n\n// Field names\nconst ID = \"_id\",\n  LAST_LOGIN = \"ts\",\n  LOGIN_COUNT = \"#\",\n  LAST_INDEX_ACCESS = \"I\",\n  FIRSTNAME = \"f\",\n  LASTNAME = \"l\",\n  PROFILE = \"P\",\n  CITY = \"c\",\n  STATE = \"s\",\n  COUNTRY = \"C\",\n  PRIVATE = \"p\"\n\nconst HEADERS = [\"\", \"Name\", \"City\", \"Region\", \"Country\"]\nconst REQUIRED_FIELDS = [ID, FIRSTNAME, LASTNAME, PROFILE, CITY, STATE, COUNTRY]\nfunction makeRow(rowData) {\n  const [_id, firstname, lastname, profile, city, state, country] = rowData\n  return [\n    user_thumbnail(_id, profile),\n    `${firstname} ${lastname}`,\n    city,\n    state,\n    country,\n  ]\n}\n\nconst priv_icon = icon(\"eye-blocked\")\nconst pub_icon = icon(\"eye\")\nconst ADMIN_HEADERS = [\n  \"ID\",\n  icon(\"user-secret\"),\n  \"# Logins\",\n  \"LastLogin\",\n  \"IndexAccess\",\n  \"Name\",\n  \"City\",\n  \"Region\",\n  \"Country\",\n]\nconst ADMIN_REQUIRED_FIELDS = [\n  ID,\n  PROFILE,\n  CITY,\n  STATE,\n  COUNTRY,\n  FIRSTNAME,\n  LASTNAME,\n  LAST_LOGIN,\n  LOGIN_COUNT,\n  LAST_INDEX_ACCESS,\n  PRIVATE,\n]\nfunction makeAdminRow(rowData) {\n  const [\n    _id,\n    profile,\n    city,\n    state,\n    country,\n    firstname,\n    lastname,\n    last_login,\n    login_count,\n    last_index_access,\n    priv,\n  ] = rowData\n\n  // console.log(rowData)\n  const picon = priv ? priv_icon : pub_icon\n  return [\n    user_thumbnail(_id, profile),\n    picon,\n    login_count,\n    ts_to_dt(last_login),\n    ts_to_dt(last_index_access),\n    `${firstname} ${lastname}`,\n    city,\n    state,\n    country,\n  ]\n}\n\nasync function run() {\n  status_el.classList.add(\"spinner\")\n  console.time(\"maketable\")\n  const response = await fetch(url, { method: \"POST\" })\n  const data = await response.json()\n\n  const n_rows = data.length\n  const header_data = admin ? ADMIN_HEADERS : HEADERS\n  const headers = header_data.join(\"</th><th>\")\n  const thead_str = `<thead><th>${headers}</th></thead>\\n`\n\n  // The first row we get is field names\n  // which we will use to determine field ordering\n  const fields = data[0]\n  const field_pos = {}\n  for (let i = 0; i < fields.length; i++) {\n    field_pos[fields[i]] = i\n  }\n  const required_fields = admin ? ADMIN_REQUIRED_FIELDS : REQUIRED_FIELDS\n  const permutation = required_fields.map((f) => field_pos[f])\n\n  const rowFunc = admin ? makeAdminRow : makeRow\n  const row_strs = new Array(n_rows - 1)\n  for (let i = 1; i < n_rows; i++) {\n    const row = data[i]\n    const permuted_row = permutation.map((j) => row[j])\n    const cells = rowFunc(permuted_row).join(\"</td><td>\")\n    row_strs[i - 1] = `<tr><td>${cells}</td></tr>`\n  }\n  const rows_str = row_strs.join(\"\\n\")\n  const tbody_str = `<tbody>\\n${rows_str}\\n</tbody>`\n\n  const table_element: HTMLTableElement = document.getElementById(\"users\")\n  table_element.innerHTML = thead_str + tbody_str\n  console.timeEnd(\"maketable\")\n\n  const myTable = new JSTable(table_element, {\n    sortable: true,\n    searchable: true,\n    perPage: 12,\n  })\n  await sleep(0.2)\n  status_el.classList.remove(\"spinner\")\n}\n\n;(async () => {\n  try {\n    await run()\n  } catch (e) {\n    console.log(\"oops. \", e)\n  }\n})()\n","/*!\n * JSTable v1.5.1\n */\n// import \"../css/jstable.scss\"\n\nconst JSTableDefaultConfig = {\n  perPage: 5,\n  perPageSelect: [5, 10, 15, 20, 25],\n\n  sortable: true,\n  searchable: true,\n\n  // Pagination\n  nextPrev: true,\n  firstLast: false,\n  prevText: \"&lsaquo;\",\n  nextText: \"&rsaquo;\",\n  firstText: \"&laquo;\",\n  lastText: \"&raquo;\",\n  ellipsisText: \"&hellip;\",\n  truncatePager: true,\n  pagerDelta: 2,\n\n  classes: {\n    top: \"dt-top\",\n    info: \"dt-info\",\n    input: \"dt-input\",\n    table: \"dt-table\",\n    bottom: \"dt-bottom\",\n    search: \"dt-search\",\n    sorter: \"dt-sorter\",\n    wrapper: \"dt-wrapper\",\n    dropdown: \"dt-dropdown\",\n    ellipsis: \"dt-ellipsis\",\n    selector: \"dt-selector\",\n    container: \"dt-container\",\n    pagination: \"dt-pagination\",\n    loading: \"dt-loading\",\n    message: \"dt-message\",\n  },\n\n  // Customise the display text\n  labels: {\n    placeholder: \"Search...\",\n    perPage: \"{select} entries per page\",\n    noRows: \"No entries found\",\n    info: \"Showing {start} to {end} of {rows} entries\",\n    loading: \"Loading...\",\n    infoFiltered:\n      \"Showing {start} to {end} of {rows} entries (filtered from {rowsTotal} entries)\",\n  },\n\n  // Customise the layout\n  layout: {\n    top: \"{select}{search}\",\n    bottom: \"{info}{pager}\",\n  },\n\n  // server side\n  serverSide: false,\n  // total count of elements\n  deferLoading: null,\n  // url for queries\n  ajax: null,\n  // additional params\n  ajaxParams: {},\n  // query params names\n  queryParams: {\n    page: \"page\",\n    search: \"search\",\n  },\n  // append query params on events\n  addQueryParams: true,\n\n  rowAttributesCreator: null,\n}\n\nexport class JSTable {\n  constructor(element, config = {}) {\n    let DOMElement = element\n    if (typeof element === \"string\") {\n      DOMElement = document.querySelector(element)\n    }\n    if (DOMElement === null) {\n      return\n    }\n\n    this.config = this._merge(JSTableDefaultConfig, config)\n    this.table = new JSTableElement(DOMElement)\n\n    // reset values\n    this.currentPage = 1\n    this.columnRenderers = []\n    this.columnsNotSearchable = []\n    this.searchQuery = null\n    this.sortColumn = null\n    this.sortDirection = \"asc\"\n    this.isSearching = false\n    this.filteredDataCount = null\n\n    // init pager\n    this.pager = new JSTablePager(this)\n\n    // build wrapper and layout\n    this._build()\n    this._buildColumns()\n\n    // update table content\n    this.update(!this.config.serverSide)\n\n    // bind events\n    this._bindEvents()\n\n    this._emit(\"init\")\n\n    this._parseQueryParams()\n  }\n\n  _build() {\n    var that = this\n    let options = this.config\n\n    this.wrapper = document.createElement(\"div\")\n    this.wrapper.className = options.classes.wrapper\n\n    var inner = [\n      \"<div class='\",\n      options.classes.top,\n      \"'>\",\n      options.layout.top,\n      \"</div>\",\n      \"<div class='\",\n      options.classes.container,\n      \"'>\",\n      \"<div class='\",\n      options.classes.loading,\n      \" hidden'>\",\n      options.labels.loading,\n      \"</div>\",\n      \"</div>\",\n      \"<div class='\",\n      options.classes.bottom,\n      \"'>\",\n      options.layout.bottom,\n      \"</div>\",\n    ].join(\"\")\n\n    // Info placement\n    inner = inner.replace(\n      \"{info}\",\n      \"<div class='\" + options.classes.info + \"'></div>\"\n    )\n\n    // Per Page Select\n    if (options.perPageSelect) {\n      var wrap = [\n        \"<div class='\",\n        options.classes.dropdown,\n        \"'>\",\n        \"<label>\",\n        options.labels.perPage,\n        \"</label>\",\n        \"</div>\",\n      ].join(\"\")\n\n      // Create the select\n      var select = document.createElement(\"select\")\n      select.className = options.classes.selector\n\n      // Create the options\n      options.perPageSelect.forEach(function (val) {\n        var selected = val === options.perPage\n        var option = new Option(val, val, selected, selected)\n        select.add(option)\n      })\n\n      // Custom label\n      wrap = wrap.replace(\"{select}\", select.outerHTML)\n\n      // Selector placement\n      inner = inner.replace(/\\{select\\}/g, wrap)\n    } else {\n      inner = inner.replace(/\\{select\\}/g, \"\")\n    }\n\n    // Searchable\n    if (options.searchable) {\n      var form = [\n        \"<div class='\",\n        options.classes.search,\n        \"'>\",\n        \"<input class='\",\n        options.classes.input,\n        \"' placeholder='\",\n        options.labels.placeholder,\n        \"' type='text'>\",\n        \"</div>\",\n      ].join(\"\")\n\n      // Search input placement\n      inner = inner.replace(/\\{search\\}/g, form)\n    } else {\n      inner = inner.replace(/\\{search\\}/g, \"\")\n    }\n\n    // Add table class\n\n    this.table.element.classList.add(options.classes.table)\n\n    // Pager\n\n    inner = inner.replace(\n      \"{pager}\",\n      \"<div class='\" + options.classes.pagination + \"'></div>\"\n    )\n\n    this.wrapper.innerHTML = inner\n\n    this.table.element.parentNode.replaceChild(this.wrapper, this.table.element)\n\n    let container = this.wrapper.querySelector(\".\" + options.classes.container)\n    container.appendChild(this.table.element)\n\n    this._updatePagination()\n    this._updateInfo()\n  }\n\n  async update(reloadData = true) {\n    var that = this\n\n    // no overlap please\n    if (this.currentPage > this.pager.getPages()) {\n      this.currentPage = this.pager.getPages()\n    }\n\n    let loading = that.wrapper.querySelector(\" .\" + that.config.classes.loading)\n    loading.classList.remove(\"hidden\")\n\n    // Create Header\n    this.table.header\n      .getCells()\n      .forEach(function (tableHeaderCell, columnIndex) {\n        let th = that.table.head.rows[0].cells[columnIndex]\n        th.innerHTML = tableHeaderCell.getInnerHTML()\n        if (tableHeaderCell.classes.length > 0) {\n          th.className = tableHeaderCell.classes.join(\" \")\n        }\n        for (let attr in tableHeaderCell.attributes) {\n          th.setAttribute(attr, tableHeaderCell.attributes[attr])\n        }\n        th.setAttribute(\"data-sortable\", tableHeaderCell.isSortable)\n      })\n\n    if (reloadData) {\n      // Change Table Body\n      return this.getPageData(this.currentPage)\n        .then(function (data) {\n          that.table.element.classList.remove(\"hidden\")\n          that.table.body.innerHTML = \"\"\n\n          data.forEach(function (row) {\n            that.table.body.appendChild(\n              row.getFormatted(\n                that.columnRenderers,\n                that.config.rowAttributesCreator\n              )\n            )\n          })\n\n          loading.classList.add(\"hidden\")\n        })\n        .then(function () {\n          // No Data\n          if (that.getDataCount() <= 0) {\n            that.wrapper.classList.remove(\"search-results\")\n            that.setMessage(that.config.labels.noRows)\n          }\n\n          that._emit(\"update\")\n        })\n        .then(function () {\n          that._updatePagination()\n          that._updateInfo()\n        })\n    }\n    // when there is a defer loading (server side) the initial data needs to be formatted\n    else {\n      that.table.element.classList.remove(\"hidden\")\n      that.table.body.innerHTML = \"\"\n\n      // No Data\n      if (this.getDataCount() <= 0) {\n        that.wrapper.classList.remove(\"search-results\")\n        that.setMessage(that.config.labels.noRows)\n      }\n\n      this._getData().forEach(function (row) {\n        that.table.body.appendChild(\n          row.getFormatted(\n            that.columnRenderers,\n            that.config.rowAttributesCreator\n          )\n        )\n      })\n      loading.classList.add(\"hidden\")\n    }\n  }\n\n  _updatePagination() {\n    // change Pagination\n    let pagination = this.wrapper.querySelector(\n      \" .\" + this.config.classes.pagination\n    )\n    pagination.innerHTML = \"\"\n    pagination.appendChild(this.pager.render(this.currentPage))\n  }\n\n  _updateInfo() {\n    // change info\n    let info = this.wrapper.querySelector(\" .\" + this.config.classes.info)\n\n    let infoString = this.isSearching\n      ? this.config.labels.infoFiltered\n      : this.config.labels.info\n    if (info && infoString.length) {\n      var string = infoString\n        .replace(\n          \"{start}\",\n          this.getDataCount() > 0 ? this._getPageStartIndex() + 1 : 0\n        )\n        .replace(\"{end}\", this._getPageEndIndex() + 1)\n        .replace(\"{page}\", this.currentPage)\n        .replace(\"{pages}\", this.pager.getPages())\n        .replace(\"{rows}\", this.getDataCount())\n        .replace(\"{rowsTotal}\", this.getDataCountTotal())\n\n      info.innerHTML = string\n    }\n  }\n\n  _getPageStartIndex() {\n    return (this.currentPage - 1) * this.config.perPage\n  }\n  _getPageEndIndex() {\n    let end = this.currentPage * this.config.perPage - 1\n    return end > this.getDataCount() - 1 ? this.getDataCount() - 1 : end\n  }\n\n  _getData() {\n    this._emit(\"getData\", this.table.dataRows)\n    return this.table.dataRows.filter(function (row) {\n      return row.visible\n    })\n  }\n\n  _fetchData() {\n    var that = this\n\n    let params = {\n      searchQuery: this.searchQuery,\n      sortColumn: this.sortColumn,\n      sortDirection: this.sortDirection,\n      start: this._getPageStartIndex(),\n      length: this.config.perPage,\n      datatable: 1,\n    }\n\n    params = Object.assign({}, this.config.ajaxParams, params)\n\n    let query = this.config.ajax + \"?\" + this._queryParams(params)\n\n    return fetch(query, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        return response.json()\n      })\n      .then(function (json) {\n        that._emit(\"fetchData\", json)\n        that.filteredDataCount = json.recordsFiltered\n        return json.data\n      })\n      .then(function (data) {\n        let rows = []\n        // Create Table\n        data.forEach(function (dataRow) {\n          rows.push(JSTableRow.createFromData(dataRow))\n        })\n        return rows\n      })\n      .catch(function (error) {\n        console.error(error)\n      })\n  }\n\n  _queryParams(params) {\n    return Object.keys(params)\n      .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n      .join(\"&\")\n  }\n\n  getDataCount() {\n    if (this.isSearching) {\n      return this.getDataCountFiltered()\n    }\n    return this.getDataCountTotal()\n  }\n\n  getDataCountFiltered() {\n    if (this.config.serverSide) {\n      return this.filteredDataCount\n    }\n    return this._getData().length\n  }\n\n  getDataCountTotal() {\n    if (this.config.serverSide) {\n      return this.config.deferLoading\n    }\n    return this.table.dataRows.length\n  }\n\n  getPageData() {\n    // return the ajax data with a promise\n    if (this.config.serverSide) {\n      return this._fetchData()\n    }\n\n    // filter the table data and return a promise\n    let start_idx = this._getPageStartIndex()\n    var end_idx = this._getPageEndIndex()\n    return Promise.resolve(this._getData()).then(function (data) {\n      return data.filter(function (row, idx) {\n        return idx >= start_idx && idx <= end_idx\n      })\n    })\n  }\n\n  async search(query) {\n    var that = this\n\n    this.searchQuery = query.toLowerCase()\n\n    // reset parameters\n    this.currentPage = 1\n    this.isSearching = true\n\n    // reset search\n    if (!this.searchQuery.length) {\n      // reset data to all table data\n      this.table.dataRows.forEach(function (row) {\n        row.visible = true\n      })\n      this.isSearching = false\n      that.wrapper.classList.remove(\"search-results\")\n      that.update()\n      return false\n    }\n\n    // search in all the data\n    if (!this.config.serverSide) {\n      this.table.dataRows.forEach(function (row) {\n        row.visible = false\n\n        var match = that.searchQuery.split(\" \").reduce(function (bool, word) {\n          var hasMatch = false\n\n          let cells = row.getCells()\n\n          // only use searchable cells\n          cells = cells.filter(function (cell, idx) {\n            if (that.columnsNotSearchable.indexOf(idx) < 0) {\n              return true\n            }\n          })\n\n          hasMatch = cells.some(function (cell, idx) {\n            if (cell.getTextContent().toLowerCase().indexOf(word) >= 0) {\n              return true\n            }\n          })\n\n          return bool && hasMatch\n        }, true)\n\n        if (match) {\n          row.visible = true\n        }\n      })\n    }\n    this.wrapper.classList.add(\"search-results\")\n\n    return this.update().then(function () {\n      that._emit(\"search\", query)\n    })\n  }\n\n  sort(column, direction, initial = false) {\n    var that = this\n    this.sortColumn = column || 0\n    this.sortDirection = direction\n\n    if (\n      this.sortColumn < 0 ||\n      this.sortColumn > this.table.getColumnCount() - 1\n    ) {\n      return false\n    }\n\n    var node = this.table.header.getCell(this.sortColumn)\n    var rows = this.table.dataRows\n\n    //Remove class from previus columns\n    let tableHeaderCells = this.table.header.getCells()\n    tableHeaderCells.forEach(function (tableHeaderCell) {\n      tableHeaderCell.removeClass(\"asc\")\n      tableHeaderCell.removeClass(\"desc\")\n    })\n\n    node.addClass(this.sortDirection)\n\n    if (!this.config.serverSide) {\n      rows = rows.sort(function (a, b) {\n        var ca = a.getCellTextContent(that.sortColumn).toLowerCase()\n        var cb = b.getCellTextContent(that.sortColumn).toLowerCase()\n\n        // replace $, coma, whitespace and %\n        ca = ca.replace(/(\\$|\\,|\\s|%)/g, \"\")\n        cb = cb.replace(/(\\$|\\,|\\s|%)/g, \"\")\n\n        ca = !isNaN(ca) && ca !== \"\" ? parseFloat(ca) : ca\n        cb = !isNaN(cb) && cb !== \"\" ? parseFloat(cb) : cb\n\n        // Sort empty cells or cells with different content types (numeric/not numeric) to top\n        if ((ca === \"\" && cb !== \"\") || (isNaN(ca) && !isNaN(cb))) {\n          return that.sortDirection === \"asc\" ? 1 : -1\n        }\n        if ((ca !== \"\" && cb === \"\") || (!isNaN(ca) && isNaN(cb))) {\n          return that.sortDirection === \"asc\" ? -1 : 1\n        }\n\n        // Otherwise\n        if (that.sortDirection === \"asc\") {\n          return ca === cb ? 0 : ca > cb ? 1 : -1\n        }\n        return ca === cb ? 0 : ca < cb ? 1 : -1\n      })\n\n      // replace dataRows with sorted rows\n      this.table.dataRows = rows\n    }\n\n    // initial sorting with serverSide on is not needed\n    if (!this.config.serverSide || !initial) {\n      this.update()\n    }\n\n    this._emit(\"sort\", this.sortColumn, this.sortDirection)\n  }\n\n  async paginate(new_page) {\n    var that = this\n\n    this.currentPage = new_page\n    return this.update().then(function () {\n      that._emit(\"paginate\", that.currentPage, new_page)\n    })\n  }\n\n  _bindEvents() {\n    var that = this\n\n    this.wrapper.addEventListener(\"click\", function (event) {\n      var node = event.target\n\n      if (node.hasAttribute(\"data-page\")) {\n        event.preventDefault()\n        let new_page = parseInt(node.getAttribute(\"data-page\"), 10)\n        that.paginate(new_page)\n\n        if (that.config.addQueryParams) {\n          const url = new URL(window.location.href)\n          url.searchParams.set(that.config.queryParams.page, new_page)\n          window.history.replaceState(null, null, url)\n        }\n      }\n\n      if (node.nodeName === \"TH\" && node.hasAttribute(\"data-sortable\")) {\n        if (node.getAttribute(\"data-sortable\") === \"false\") return false\n\n        event.preventDefault()\n        that.sort(\n          node.cellIndex,\n          node.classList.contains(\"asc\") ? \"desc\" : \"asc\"\n        )\n      }\n    })\n\n    if (this.config.perPageSelect) {\n      this.wrapper.addEventListener(\"change\", function (e) {\n        var node = e.target\n        if (\n          node.nodeName === \"SELECT\" &&\n          node.classList.contains(that.config.classes.selector)\n        ) {\n          e.preventDefault()\n          let value = parseInt(node.value, 10)\n          that._emit(\"perPageChange\", that.config.perPage, value)\n          that.config.perPage = value\n          that.update()\n        }\n      })\n    }\n\n    if (this.config.searchable) {\n      this.wrapper.addEventListener(\"keyup\", function (e) {\n        if (\n          e.target.nodeName === \"INPUT\" &&\n          e.target.classList.contains(that.config.classes.input)\n        ) {\n          e.preventDefault()\n          that.search(e.target.value)\n\n          if (that.config.addQueryParams) {\n            const url = new URL(window.location.href)\n            url.searchParams.set(that.config.queryParams.search, e.target.value)\n            window.history.replaceState(null, null, url)\n          }\n        }\n      })\n    }\n  }\n\n  on(event, callback) {\n    this.events = this.events || {}\n    this.events[event] = this.events[event] || []\n    this.events[event].push(callback)\n  }\n\n  off(event, callback) {\n    this.events = this.events || {}\n    if (event in this.events === false) return\n    this.events[event].splice(this.events[event].indexOf(callback), 1)\n  }\n\n  _emit(event) {\n    this.events = this.events || {}\n    if (event in this.events === false) return\n    for (var i = 0; i < this.events[event].length; i++) {\n      this.events[event][i].apply(\n        this,\n        Array.prototype.slice.call(arguments, 1)\n      )\n    }\n  }\n\n  setMessage(message) {\n    var colspan = this.table.getColumnCount()\n\n    var node = document.createElement(\"tr\")\n    node.innerHTML =\n      '<td class=\"' +\n      this.config.classes.message +\n      '\" colspan=\"' +\n      colspan +\n      '\">' +\n      message +\n      \"</td>\"\n\n    this.table.body.innerHTML = \"\"\n\n    this.table.body.appendChild(node)\n  }\n\n  _buildColumns() {\n    var that = this\n\n    /**\n     * change sortable attribute of columns:\n     * - a global definition of the sortable attribute of the table can be overwritten\n     *   by a \"data-sortable\" attribute on the table header or\n     *   by a custom column definitions attribute \"sortable\"\n     * - a custom column definitions attribute \"sortable\" can be overwritten\n     *   by a \"data-sortable\" attribute on the table header\n     * - a \"data-sortable\" attribute on the table header cannot be overwritten\n     *\n     * the initial sort column/direction can be defined on the table header (data-sort) or\n     * on the custom column definitions (attribute \"sort\") with possible values \"asc\"/\"desc\"\n     * - a custom column definitions attribute is overwritten by a \"data-sort\" attribute\n     * - since sorting is only supported for 1 column at the same time the last defined column is used\n     */\n\n    let initialSortColumn = null\n    let initialSortDirection = null\n\n    /**\n     * Process custom column definitions\n     */\n    if (this.config.columns) {\n      this.config.columns.forEach(function (columnsDefinition) {\n        // convert single column selection to array\n        if (!isNaN(columnsDefinition.select)) {\n          columnsDefinition.select = [columnsDefinition.select]\n        }\n\n        // Add the data attributes to the th elements\n        columnsDefinition.select.forEach(function (column) {\n          var tableHeaderCell = that.table.header.getCell(column)\n\n          // Skip missing\n          if (tableHeaderCell === undefined) {\n            return\n          }\n\n          /**\n           * Rendering\n           */\n          if (\n            columnsDefinition.hasOwnProperty(\"render\") &&\n            typeof columnsDefinition.render === \"function\"\n          ) {\n            that.columnRenderers[column] = columnsDefinition.render\n          }\n\n          /**\n           * Sortable\n           */\n          if (columnsDefinition.hasOwnProperty(\"sortable\")) {\n            let sortable = false\n            if (tableHeaderCell.hasSortable) {\n              sortable = tableHeaderCell.isSortable\n            } else {\n              sortable = columnsDefinition.sortable\n              tableHeaderCell.setSortable(sortable)\n            }\n\n            if (sortable) {\n              tableHeaderCell.addClass(that.config.classes.sorter)\n\n              // save sortable column/direction\n              // when there is one selected column in columns definition\n              // and this column should be sortable\n              if (\n                columnsDefinition.hasOwnProperty(\"sort\") &&\n                columnsDefinition.select.length === 1\n              ) {\n                initialSortColumn = columnsDefinition.select[0]\n                initialSortDirection = columnsDefinition.sort\n              }\n            }\n          }\n\n          /**\n           * Searchable (not serverside)\n           */\n          if (columnsDefinition.hasOwnProperty(\"searchable\")) {\n            tableHeaderCell.addAttribute(\n              \"data-searchable\",\n              columnsDefinition.searchable\n            )\n\n            if (columnsDefinition.searchable === false) {\n              that.columnsNotSearchable.push(column)\n            }\n          }\n        })\n      })\n    }\n\n    /**\n     * Process data-attributes\n     */\n    this.table.header\n      .getCells()\n      .forEach(function (tableHeaderCell, columnIndex) {\n        if (tableHeaderCell.isSortable === null) {\n          tableHeaderCell.setSortable(that.config.sortable)\n        }\n\n        if (tableHeaderCell.isSortable) {\n          tableHeaderCell.addClass(that.config.classes.sorter)\n\n          if (tableHeaderCell.hasSort) {\n            initialSortColumn = columnIndex\n            initialSortDirection = tableHeaderCell.sortDirection\n          }\n        }\n      })\n\n    // sort the table by the last column which is marked to be sorted\n    if (initialSortColumn !== null) {\n      that.sort(initialSortColumn, initialSortDirection, true)\n    }\n  }\n\n  // deep merge two objects\n  _merge(current, update) {\n    var that = this\n    Object.keys(current).forEach(function (key) {\n      if (\n        update.hasOwnProperty(key) &&\n        typeof update[key] === \"object\" &&\n        !(update[key] instanceof Array)\n      ) {\n        that._merge(current[key], update[key])\n      } else if (!update.hasOwnProperty(key)) {\n        update[key] = current[key]\n      }\n    })\n    return update\n  }\n\n  async _parseQueryParams() {\n    const urlParams = new URLSearchParams(window.location.search)\n\n    // parse search param and populate search\n    let search = urlParams.get(this.config.queryParams.search)\n    if (search) {\n      let searchfields = this.wrapper.querySelectorAll(\n        \".\" + this.config.classes.input\n      )\n      searchfields.forEach(function (searchfield) {\n        searchfield.value = search\n      })\n      await this.search(search)\n    }\n\n    // parse page param and navigate to page\n    let page = urlParams.get(this.config.queryParams.page)\n    if (page) {\n      await this.paginate(parseInt(page))\n    }\n  }\n}\n\nclass JSTableElement {\n  constructor(element) {\n    this.element = element\n\n    this.body = this.element.tBodies[0]\n    this.head = this.element.tHead\n\n    // we are modifying the data of the underlying element so first\n    // make a copy for row extraction\n    //let table = this.element.cloneNode(true);\n\n    // Process table rows\n    this.rows = Array.from(this.element.rows).map(function (row, rowID) {\n      return new JSTableRow(row, row.parentNode.nodeName, rowID)\n    })\n\n    this.dataRows = this._getBodyRows()\n    this.header = this._getHeaderRow()\n  }\n\n  _getBodyRows() {\n    return this.rows.filter(function (row) {\n      return !row.isHeader && !row.isFooter\n    })\n  }\n\n  _getHeaderRow() {\n    return this.rows.find(function (row) {\n      return row.isHeader\n    })\n  }\n\n  getColumnCount() {\n    return this.header.getColumnCount()\n  }\n\n  getFooterRow() {\n    return this.rows.find(function (row) {\n      return row.isFooter\n    })\n  }\n}\n\nclass JSTableRow {\n  constructor(element, parentName = \"\", rowID = null) {\n    // Process row cells\n    this.cells = Array.from(element.cells).map(function (cell) {\n      return new JSTableCell(cell)\n    })\n\n    this.d = this.cells.length\n\n    //this.element = element;\n    this.isHeader = parentName === \"THEAD\"\n    this.isFooter = parentName === \"TFOOT\"\n    this.visible = true\n    this.rowID = rowID\n\n    var that = this\n    // parse attributes\n    this.attributes = {}\n    ;[...element.attributes].forEach(function (attr) {\n      that.attributes[attr.name] = attr.value\n    })\n  }\n\n  getCells() {\n    return Array.from(this.cells)\n  }\n\n  getColumnCount() {\n    return this.cells.length\n  }\n\n  getCell(cell) {\n    return this.cells[cell]\n  }\n\n  // for sorting\n  getCellTextContent(cell) {\n    return this.getCell(cell).getTextContent()\n  }\n\n  static createFromData(data) {\n    let tr = document.createElement(\"tr\")\n\n    if (data.hasOwnProperty(\"data\")) {\n      if (data.hasOwnProperty(\"attributes\")) {\n        for (const attrName in data[\"attributes\"]) {\n          tr.setAttribute(attrName, data[\"attributes\"][attrName])\n        }\n      }\n      data = data[\"data\"]\n    }\n\n    data.forEach(function (cellData) {\n      let td = document.createElement(\"td\")\n      td.innerHTML =\n        !!cellData && cellData.hasOwnProperty(\"data\")\n          ? cellData[\"data\"]\n          : cellData\n\n      if (!!cellData && cellData.hasOwnProperty(\"attributes\")) {\n        for (const attrName in cellData[\"attributes\"]) {\n          td.setAttribute(attrName, cellData[\"attributes\"][attrName])\n        }\n      }\n      tr.appendChild(td)\n    })\n    return new JSTableRow(tr)\n  }\n\n  getFormatted(columnRenderers, rowAttributesCreator = null) {\n    let tr = document.createElement(\"tr\")\n    var that = this\n\n    for (let attr in this.attributes) {\n      tr.setAttribute(attr, this.attributes[attr])\n    }\n\n    let rowAttributes = !!rowAttributesCreator\n      ? rowAttributesCreator.call(this, this.getCells())\n      : {}\n    for (const attrName in rowAttributes) {\n      tr.setAttribute(attrName, rowAttributes[attrName])\n    }\n\n    this.getCells().forEach(function (cell, idx) {\n      var td = document.createElement(\"td\")\n      td.innerHTML = cell.getInnerHTML()\n      if (columnRenderers.hasOwnProperty(idx)) {\n        td.innerHTML = columnRenderers[idx].call(that, cell.getElement(), idx)\n      }\n      if (cell.classes.length > 0) {\n        td.className = cell.classes.join(\" \")\n      }\n      for (let attr in cell.attributes) {\n        td.setAttribute(attr, cell.attributes[attr])\n      }\n      tr.appendChild(td)\n    })\n    return tr\n  }\n\n  setCellClass(cell, className) {\n    this.cells[cell].addClass(className)\n  }\n}\n\nclass JSTableCell {\n  constructor(element) {\n    this.textContent = element.textContent\n    this.innerHTML = element.innerHTML\n    this.className = \"\"\n    this.element = element\n\n    this.hasSortable = element.hasAttribute(\"data-sortable\")\n    this.isSortable = this.hasSortable\n      ? element.getAttribute(\"data-sortable\") === \"true\"\n      : null\n\n    this.hasSort = element.hasAttribute(\"data-sort\")\n    this.sortDirection = element.getAttribute(\"data-sort\")\n\n    this.classes = []\n\n    var that = this\n    // parse attributes\n    this.attributes = {}\n    ;[...element.attributes].forEach(function (attr) {\n      that.attributes[attr.name] = attr.value\n    })\n  }\n\n  getElement() {\n    return this.element\n  }\n\n  // for sorting\n  getTextContent() {\n    return this.textContent\n  }\n\n  // for rendering\n  getInnerHTML() {\n    return this.innerHTML\n  }\n\n  setClass(className) {\n    this.className = className\n  }\n\n  setSortable(value) {\n    this.isSortable = value\n    //tableHeaderCell.setAttribute(\"data-sortable\", sortable);\n  }\n\n  addClass(value) {\n    this.classes.push(value)\n  }\n\n  removeClass(value) {\n    if (this.classes.indexOf(value) >= 0) {\n      this.classes.splice(this.classes.indexOf(value), 1)\n    }\n  }\n\n  addAttribute(key, value) {\n    this.attributes[key] = value\n  }\n}\n\nclass JSTablePager {\n  constructor(instance) {\n    this.instance = instance\n  }\n\n  getPages() {\n    let pages = Math.ceil(\n      this.instance.getDataCount() / this.instance.config.perPage\n    )\n    return pages === 0 ? 1 : pages\n  }\n\n  render() {\n    var options = this.instance.config\n    let pages = this.getPages()\n\n    let ul = document.createElement(\"ul\")\n    if (pages > 1) {\n      let prev =\n          this.instance.currentPage === 1 ? 1 : this.instance.currentPage - 1,\n        next =\n          this.instance.currentPage === pages\n            ? pages\n            : this.instance.currentPage + 1\n\n      // first button\n      if (options.firstLast) {\n        ul.appendChild(this.createItem(\"pager\", 1, options.firstText))\n      }\n\n      // prev button\n      if (options.nextPrev) {\n        ul.appendChild(this.createItem(\"pager\", prev, options.prevText))\n      }\n\n      var pager = this.truncate()\n      // append the links\n      pager.forEach(function (btn) {\n        ul.appendChild(btn)\n      })\n\n      // next button\n      if (options.nextPrev) {\n        ul.appendChild(this.createItem(\"pager\", next, options.nextText))\n      }\n\n      // first button\n      if (options.firstLast) {\n        ul.appendChild(this.createItem(\"pager\", pages, options.lastText))\n      }\n    }\n    return ul\n  }\n\n  createItem(className, pageNum, content, ellipsis) {\n    let item = document.createElement(\"li\")\n    item.className = className\n    item.innerHTML = !ellipsis\n      ? '<a href=\"#\" data-page=\"' + pageNum + '\">' + content + \"</a>\"\n      : \"<span>\" + content + \"</span>\"\n    return item\n  }\n\n  isValidPage(page) {\n    return page > 0 && page <= this.getPages()\n  }\n\n  truncate() {\n    var that = this,\n      options = that.instance.config,\n      delta = options.pagerDelta * 2,\n      currentPage = that.instance.currentPage,\n      left = currentPage - options.pagerDelta,\n      right = currentPage + options.pagerDelta,\n      totalPages = this.getPages(),\n      range = [],\n      pager = [],\n      lastIndex\n\n    if (!this.instance.config.truncatePager) {\n      for (let i = 1; i <= this.getPages(); i++) {\n        pager.push(this.createItem(i === currentPage ? \"active\" : \"\", i, i))\n      }\n    } else {\n      if (currentPage < 4 - options.pagerDelta + delta) {\n        right = 3 + delta\n      } else if (\n        currentPage >\n        this.getPages() - (3 - options.pagerDelta + delta)\n      ) {\n        left = this.getPages() - (2 + delta)\n      }\n\n      // Get the links that will be visible\n      for (var i = 1; i <= totalPages; i++) {\n        if (i === 1 || i === totalPages || (i >= left && i <= right)) {\n          range.push(i)\n        }\n      }\n\n      range.forEach(function (index) {\n        if (lastIndex) {\n          if (index - lastIndex == 2) {\n            pager.push(that.createItem(\"\", lastIndex + 1, lastIndex + 1))\n          } else if (index - lastIndex != 1) {\n            // Create ellipsis node\n            pager.push(\n              that.createItem(\n                options.classes.ellipsis,\n                0,\n                options.ellipsisText,\n                true\n              )\n            )\n          }\n        }\n\n        pager.push(\n          that.createItem(index == currentPage ? \"active\" : \"\", index, index)\n        )\n        lastIndex = index\n      })\n    }\n\n    return pager\n  }\n}\n",null],"names":["$4MiiW","parcelRequire","$0a83419cdf215331$var$JSTableDefaultConfig","perPage","perPageSelect","sortable","searchable","nextPrev","firstLast","prevText","nextText","firstText","lastText","ellipsisText","truncatePager","pagerDelta","classes","top","info","input","table","bottom","search","sorter","wrapper","dropdown","ellipsis","selector","container","pagination","loading","message","labels","placeholder","noRows","infoFiltered","layout","serverSide","deferLoading","ajax","ajaxParams","queryParams","page","addQueryParams","rowAttributesCreator","$0a83419cdf215331$export$589eb425755f05f4","element","config","arguments","length","DOMElement","document","querySelector","this","_merge","$0a83419cdf215331$var$JSTableElement","currentPage","columnRenderers","columnsNotSearchable","searchQuery","sortColumn","sortDirection","isSearching","filteredDataCount","pager","$0a83419cdf215331$var$JSTablePager","_build","_buildColumns","update","_bindEvents","_emit","_parseQueryParams","key","value","options","createElement","className","inner","join","replace","wrap","select","forEach","val","selected","option","Option","add","outerHTML","form","classList","innerHTML","parentNode","replaceChild","appendChild","_updatePagination","_updateInfo","reloadData","asyncToGenerator","$parcel$interopDefault","$f9qdg","mark","_callee","that","_this","getPages","remove","header","getCells","tableHeaderCell","columnIndex","th","head","rows","cells","attr","getInnerHTML","attributes","setAttribute","isSortable","getPageData","then","data","body","row","getFormatted","getDataCount","setMessage","_getData","render","infoString","string","_getPageStartIndex","_getPageEndIndex","getDataCountTotal","end","dataRows","filter","visible","params","start","datatable","Object","assign","query","_queryParams","fetch","method","credentials","headers","Accept","response","json","recordsFiltered","dataRow","push","$0a83419cdf215331$var$JSTableRow","createFromData","catch","error","console","keys","map","k","encodeURIComponent","getDataCountFiltered","_fetchData","start_idx","end_idx","Promise","resolve","idx","toLowerCase","split","reduce","bool","word","hasMatch","cell","indexOf","some","getTextContent","column","direction","initial","getColumnCount","node","getCell","tableHeaderCells","removeClass","addClass","sort","a","b","ca","getCellTextContent","cb","isNaN","parseFloat","new_page","addEventListener","event","target","hasAttribute","preventDefault","parseInt","getAttribute","paginate","url","URL","window","location","href","searchParams","set","history","replaceState","nodeName","cellIndex","contains","e","callback","events","splice","i","apply","Array","prototype","slice","call","colspan","initialSortColumn","initialSortDirection","columns","columnsDefinition","undefined","hasOwnProperty","hasSortable","setSortable","addAttribute","hasSort","current","urlParams","URLSearchParams","get","querySelectorAll","searchfield","tBodies","tHead","from","rowID","_getBodyRows","_getHeaderRow","isHeader","isFooter","find","parentName","$0a83419cdf215331$var$JSTableCell","d","toConsumableArray","name","tr","attr1","rowAttributes","attrName","td","getElement","cellData","textContent","instance","pages","Math","ceil","ul","prev","next","createItem","truncate","btn","pageNum","content","item","lastIndex","delta","left","right","totalPages","range","i1","index","$29f52eb2d30cb44e$var$status_el","getElementById","$29f52eb2d30cb44e$var$user_thumbnail","id","img_url","avatar","$5DXgo","img","concat","$29f52eb2d30cb44e$var$ts_to_dt","ts","time","dt","Date","toLocaleString","toLocaleDateString","log","$29f52eb2d30cb44e$var$HEADERS","$29f52eb2d30cb44e$var$REQUIRED_FIELDS","$29f52eb2d30cb44e$var$makeRow","rowData","_rowData","slicedToArray","_id","firstname","lastname","profile","city","state","country","$29f52eb2d30cb44e$var$priv_icon","$ldtxK","icon","$29f52eb2d30cb44e$var$pub_icon","$29f52eb2d30cb44e$var$ADMIN_HEADERS","$29f52eb2d30cb44e$var$ADMIN_REQUIRED_FIELDS","$29f52eb2d30cb44e$var$makeAdminRow","last_login","login_count","last_index_access","picon","$29f52eb2d30cb44e$var$run","_run","n_rows","header_data","thead_str","fields","field_pos","required_fields","permutation","rowFunc","row_strs","permuted_row","rows_str","tbody_str","table_element","_ctx","sent","admin","f","j","timeEnd","sleep","t0"],"version":3,"file":"users-page.f799eaa3.js.map"}